<div class="ui stackable top attached tabular menu">
  <a class="active item" data-tab="activity">Activity</a>
  <a class="item" data-tab="log">Logs</a>
  <a class="item" data-tab="client">Clients <span class="ui tiny label">0</span></a>
  <%_ if((terms = term.getTerminals(true)) && terms.length) { -%>
  <a class="item" data-tab="port">Ports <span class="ui tiny label"><%= terms.length %></span></a>
  <%_ } -%>
</div>
<div class="ui bottom attached active tab segment" data-tab="activity">
  <%- include('activity') %>
</div>
<div class="ui bottom attached tab segment" data-tab="log">
  <%- include('log') %>
</div>
<div class="ui bottom attached tab segment" data-tab="client">
  <%- include('client') %>
</div>
<%- include('termhandler') %>
<% if(terms.length) { -%>
<div class="ui bottom attached tab segment" data-tab="port">
  <%- include('term') %>
</div>
<% } -%>
<% script.create('JQuery')
  .useDependencies(['SocketIO'])
  .add(`
// socket handler
$.uiCon = {
    connected: false,
    keepalive: true,
    url: '${sockaddress}',
    init: function() {
        var self = this;
        self.socket = io.connect(self.url, { reconnect: self.keepalive });
        self.socket.on('connect', function() {
            self.connected = true;
            console.log('Socket connected');
        });
        self.socket.on('disconnect', function() {
            self.connected = false;
            console.log('Socket disconnected');
        });
        self.socket.on('log', function(data) {
            $.term.addLog(data.term, data);
        });
        self.socket.on('activity', function(data) {
            $.log.add(data);
        });
        self.socket.on('client', function(type) {
            $.client.load();
        });
        self.socket.on('new-activity', function(type) {
            $.activity.load();
        });
        self.socket.on('new-terminal', function() {
            window.location.reload();
        });
    }
}
// initialize
$('.menu .item').tab();
$.activity.load();
$.log.load();
$.client.load();
$.uiCon.init();
`); %>
