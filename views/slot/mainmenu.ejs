<%_ menus = {
    branding: {
        type: 'brand',
        title: apptitle,
        logo: path('/images/logo.png'),
        url: path('/')
    },
    tasks: {
        title: _('Tasks'),
        class: 'right floated',
        items: {
            about: {
                title: _('About')
            }
        }
    }
} -%>
<%_ if (user.authenticated) {
    Object.assign(menus.tasks.items, {
        divider1: {
            type: 'divider'
        },
        sendat: {
            title: _('Send AT command')
        },
        divider2: {
            type: 'divider'
        },
        logout: {
            title: _('Logout'),
            url: route('Security', {name: 'logout'})
        }
    });
} -%>
<%- menu(menus, {mainmenu: true, indentation: 2}) %>
<%_ script.create('JQuery')
  .useDependencies(['JQuery/Util', 'SemanticUI/Dialog', 'SemanticUI/Dialog/Message'])
  .addMiddle(`
$.tasks = {
    about: function() {
        const self = this;
        const f = function() {
            const msg = $.util.template('<p>%TITLE% version %VERSION%<br/>' +
                '(c) %AUTHOR%<br/>' +
                'Licensed under %LICENSE%</p>', {
                TITLE: self.aboutInfo.title,
                VERSION: self.aboutInfo.version,
                AUTHOR: $('<div>').text(self.aboutInfo.author).html(),
                LICENSE: self.aboutInfo.license
            });
            $.ntdlg.message('task-about', '${_('About')}', msg, $.ntdlg.ICON_INFO);
        }
        if (!self.aboutInfo) {
            $.get('${route('Term', {name: 'about'})}')
                .done(function(json) {
                    self.aboutInfo = json;
                    f();
                });
        } else {
            f();
        }
    },
    sendAt: function() {
        const self = this;
        if ($.term) {
            const termlist = function() {
                const result = [];
                for (let term in $.term.terms) {
                    result.push($.util.template('<option value="%VALUE%">%LABEL%</option>',
                        {VALUE: term, LABEL: term}));
                }
                return result.join('');
            }
            const message =
                '<form class="ui container form">' +
                    '<div class="field">' +
                        '<label>Select terminal:</label>' +
                        '<select name="terminal" class="ui dropdown">' +
                            termlist() +
                        '</select>' +
                    '</div>' +
                    '<div class="field">' +
                        '<label>${_('Command:')}</label>' +
                        '<input type="text" name="command" value="">' +
                    '</div>' +
                    '<div class="field">' +
                        '<label>${_('Feedback:')}</label>' +
                        '<div class="ui segment feedback" style="height: 10rem; overflow-y: auto;"></div>' +
                    '</div>' +
                '</form>';
            const dlg = $.ntdlg.dialog('sendatdlg', '${_('Send AT command')}', message, 'desktop icon', {
                send: {
                    type: 'green approve',
                    caption: '<i class="check icon"></i>${_('Send')}',
                    handler: function() {
                        const term = dlg.find('select[name="terminal"]');
                        const cmd = dlg.find('input[name="command"]');
                        if (term.val() === null) {
                            term.focus();
                            return false;
                        }
                        if (cmd.val() === '') {
                            cmd.focus();
                            return false;
                        }
                        $.post('${route('Term', {name: 'at', term: 'TERM'})}'.replace(/TERM/, term.val()), {command: cmd.val()})
                            .done(function(json) {
                                const responses = [];
                                responses.push($.util.template('%TERM%&gt; <strong>%CMD%</strong> <i class="%ICON% icon"></i>', {
                                    TERM: term.val(),
                                    CMD: cmd.val(),
                                    ICON: json.success ? 'green check' : 'red times'
                                }));
                                if (json.data) {
                                    responses.push($.util.template('<pre>%DATA%</pre>', {
                                        STATE: json.success ? 'green' : 'red',
                                        DATA: json.data
                                    }));
                                }
                                dlg.find('.feedback').append($.util.template('<p class="small">%CONTENT%</p>', {
                                    CONTENT: responses.join('')
                                }));
                            });
                        return false;
                    }
                },
                close: {
                    type: 'red deny',
                    caption: '<i class="times icon"></i>${_('Close')}'
                }
            });
            dlg.find('select.dropdown').dropdown();
            dlg.find('form').on('submit', function(e) {
                e.preventDefault();
                dlg.find('.approve').click();
            });
            $.ntdlg.show(dlg);
        }
    },
    init: function() {
        const self = this;
        $('.menu-about').on('click', function(e) {
            e.preventDefault();
            self.about();
        });
        $('.menu-sendat').on('click', function(e) {
            e.preventDefault();
            self.sendAt();
        });
    }
}
`).addLast(`
$.tasks.init();
`) -%>